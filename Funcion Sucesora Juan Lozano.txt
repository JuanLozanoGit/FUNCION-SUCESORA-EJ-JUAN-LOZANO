print("Para que funcione correctamente, por favor utiliza los numeros naturales")

# Primero empiezo usando el def para definir la funcion sucesora y la antecesora
# La funcion sucesora se basa en sumar +1 al resultado y devolverlo, entonces aplicamos el return n+1 (n es el numero)

def Sucesora(n):
    """Devuelve el sucesor de un numero natural."""
    return n + 1


# La funcion antecesora se basa en restar +1 al resultado y devolverlo, excepto si es 0, por lo que al ser los naturales no tienen que ser negativo
# Si el usuario ingresa por error el 0, el raise que es utilizado para lanzar excepciones en este caso combinado con el ValueError, indicara que es un error

def Antecesora(n):
    """Devuelve el antecesor de un numero natural, excepto para 0."""
    if n > 0:
        return n - 1
    raise ValueError("No existe antecesor de 0 en los numeros naturales.")


# Aca definimos a y b, como 2 datos, ya que para poder hacer cualquier operacion se necesitan 2 o mas datos (numeros)
# Como no queremos almacenar una variable dentro del bucle, vamos a usar el _ que indica que el ciclo se seguira ejecutando n cantidad de veces
# Utilizamos el a = Sucesora(a) como indicativo que a medida el valor se actualiza sumandole 1 a la funcion sucesora

def suma(a, b):
    """Suma dos numeros usando la funcion sucesora."""
    for _ in range(b):
        a = Sucesora(a)
    return a


# Para la multiplicacion, usamos la suma repetida, es decir, sumamos "a" a si mismo "b" veces.
def multiplicacion(a, b):
    """Multiplica dos numeros usando la suma."""
    resultado = 0
    for _ in range(b):
        resultado = suma(resultado, a)
    return resultado


# Para la resta, usamos la funcion antecesora en lugar de hacer una resta directa.
# Si el primer numero es menor que el segundo, lanzamos un error porque los numeros naturales no pueden ser negativos.
def resta(a, b):
    """Resta dos numeros usando la funcion antecesora."""
    if a < b:
        raise ValueError("La resta no esta definida para numeros naturales con resultado negativo.")
    for _ in range(b):
        a = Antecesora(a)
    return a


# Para la division, usamos la resta repetida hasta que "a" sea menor que "b".
# Contamos cuantas veces podemos restar "b" de "a" hasta que no se pueda mas, y ese es el cociente.
def division(a, b):
    """Divide dos numeros usando la resta."""
    if b == 0:
        raise ValueError("La division por 0 no esta definida.")
    cociente = 0
    while a >= b:
        a = resta(a, b)
        cociente = Sucesora(cociente)
    return cociente


# Creamos una funcion para solicitar un numero al usuario y validamos que sea un numero natural (mayor o igual a 0).
def obtener_numero(mensaje):
    """Solicita al usuario un numero natural valido."""
    while True:
        try:
            num = int(input(mensaje))
            if num < 0:
                raise ValueError
            return num
        except ValueError:
            print("Por favor, ingrese un numero natural valido.")


# Funcion principal del programa, donde pedimos al usuario los numeros y la operacion que desea realizar.
def operaciones():
    """Funcion principal para solicitar la operacion y los numeros al usuario."""
    while True:
        n = obtener_numero("Â¿Cuantos numeros deseas operar? ")
        if n < 2:
            print("Se requieren al menos dos numeros para operar.")
            continue
        
        numeros = [obtener_numero(f"Ingrese el numero {i+1}: ") for i in range(n)]
        
        print("Operaciones disponibles:")
        print("1. Suma")
        print("2. Multiplicacion")
        print("3. Resta")
        print("4. Division")
        print("5. Salir")
        
        opcion = input("Elige la operacion (1-2-3-4), 5 para Salir del programa: ")
        
        if opcion == "5":
            print("Saliendo del programa...")
            break
        
        try:
            if opcion == "1":
                resultado = suma(numeros[0], numeros[1])
                print(f"La suma de los numeros es: {resultado}")

            elif opcion == "2":
                resultado = multiplicacion(numeros[0], numeros[1])
                print(f"La multiplicacion de los numeros es: {resultado}")

            elif opcion == "3":
                resultado = resta(numeros[0], numeros[1])
                print(f"La resta de los numeros es: {resultado}")

            elif opcion == "4":
                resultado = division(numeros[0], numeros[1])
                print(f"La division de los numeros es: {resultado}")

            else:
                print("Operacion no valida.")
        except ValueError as e:
            print(f"Error: {e}")
        
        print("\n--- Nueva operacion ---\n")


# Aca ejecutamos la funcion operaciones() solo si el codigo se ejecuta directamente.
if __name__ == "__main__":
    operaciones()
